package eth1

import (
	"encoding/hex"
	"encoding/json"
	"github.com/bloxapp/ssv/eth1/abiparser"
	"github.com/bloxapp/ssv/utils/logex"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/pkg/errors"
	"github.com/stretchr/testify/require"
	"go.uber.org/zap"
	"strings"
	"testing"
)

func TestParseOperatorAddedEvent(t *testing.T) {
	OldRawOperatorAdded := `{
  "address": "0x9573c41f0ed8b72f3bd6a9ba6e3e15426a0aa65b",
  "topics": [
	"0x39b34f12d0a1eb39d220d2acd5e293c894753a36ac66da43b832c9f1fdb8254e"
  ],
  "data": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000067ce5c69260bd819b4e0ad13f4b873074d47981100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000005617364617300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002644c5330744c5331435255644a54694253553045675546564354456c4449457446575330744c533074436b314a53554a4a616b464f516d64726357687261556335647a424351564646526b464254304e425554684254556c4a516b4e6e53304e4255555642623364464e303946596e643554477432636c6f7756465530616d6f4b6232393553555a34546e5a6e636c6b34526d6f7256334e736556705562486c714f4656455a6b5a7957576731565734796454525a545752425a53746a5547597857457372515339514f5668594e3039434e47356d4d51705062306457516a5a33636b4d76616d684d596e5a50534459314d484a3556566c766347565a6147785457486848626b5130646d4e3256485a6a6355784d516974315a54497661586c546546464d634670534c7a5a57436e4e554d325a47636b5676626e704756484675526b4e33513059794f476c51626b7057516d70594e6c517653474e55536a553153555272596e52766447467956545a6a6433644f543068755347743656334a324e326b4b64486c5161314930523255784d576874566b633555577053543351314e6d566f57475a4763305a764e55317855335a7863466c776246687253533936565535744f476f76624846465a465577556c6856636a517854416f7961486c4c57533977566d707a5a32316c56484e4f4e79396163554644613068355a546c47596d74574f565976566d4a556144646f56315a4d5648464855326733516c6b765244646e643039335a6e564c61584579436c52335355524255554643436930744c5330745255354549464a545153425156554a4d53554d675330565a4c5330414c53304b00000000000000000000000000000000000000000000000000000000",
  "blockNumber": "0x49f59c",
  "transactionHash": "0x097d9a621ace2ca0c78d115d833edc1901bfe75f107a7b3f427663ea308c12ca",
  "transactionIndex": "0xf",
  "blockHash": "0x9542ecebe9d541e2575cb5577dfd4b73c9b0c3ab634fcac4ce0ff319249c90e4",
  "logIndex": "0xf",
  "removed": false
}`
	rawOperatorAdded := `{
   "address":"0xd594c1ef4845713e86658cb42227a811625a285b",
   "topics":[
      "0x39b34f12d0a1eb39d220d2acd5e293c894753a36ac66da43b832c9f1fdb8254e",
      "0x000000000000000000000000a5cfd290965372553efd5fdaeb91c335207b76e2"
   ],
   "data":"0x00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f546573744f70657261746f72383838000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002644c533038393536343955644a54694253553045675546564354456c4449457446575330744c533074436b314a53554a4a616b464f516d64726357687261556335647a424351564646526b464254304e425554684254556c4a516b4e6e53304e42555556424f4852585247307862544e7459573552613078776556704c4d7a634b4d474e4852476f79646c42545753745257564642643342574f585a705754684b566c677a54324a30566a4e4c4c3234784e79397065475a325645783561475a4b636b677a5953747053314e4963446c3557455534635170364e3252684f546c61567a5534527a4179654446305a6e7075563152454d6d4670626b6c704d444177646a5135526a4654647a6c594f55747451556735567a4e47646a426152457061647a5a4b5646643352305a69436d5a69546d4d326347567654473575636e6c6c576c56586230395a516d733054566732556d395156325a584e554a456155526165484671566a6476624656335a6e46424d57354f65553936525846434d45746b5357384b624578535a4641344f445a424e464a725a47706a55446335615764724d30526a565664434d4468705a6c4d3453466c76533031325a555a72656b30795232646d4f47354c526e466d536e46594e7a6c796246523463417053546e6c6865555a4f5958685a57455934656e42424d486c5952474648513049315469747a5a314e32596a6731574441796457564361314e61644646554d554d7954474d78576c5a6b624552465a5670474e464e6c436b68335355524255554643436930744c5330745255354549464a545153425156554a4d53554d675330565a4c5330744c53304b00000000000000000000000000000000000000000000000000000000",
   "blockNumber":"0x5b5d76",
   "transactionHash":"0xe353261f2d9c94b08769bc1cccf719e687cce72e6ad192ad186033bd96cc94c8",
   "transactionIndex":"0x0",
   "blockHash":"0x1065e001029f348db9945b0e747e62f9dbe4aa6eb154d602026f833078424c70",
   "logIndex":"0x3",
   "removed":false
}`

	rawOperatorAddedV2 := `{
   "address":"0x76B1c8E85A43c665eBC4aE1f8ea0Aebd2CAdd11e",
   "topics":[
      "0x5a3099b1ee94660a28947b3373e6fb48987123c5c87814eebba219a599454aa4",
      "0x00000000000000000000000067ce5c69260bd819b4e0ad13f4b873074d479811"
   ],
   "data":"0x0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000006617364646173000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002644c5330744c5331435255644a54694253553045675546564354456c4449457446575330744c533074436b314a53554a4a616b464f516d64726357687261556335647a424351564646526b464254304e425554684254556c4a516b4e6e53304e4255555642623364464e303946596e643554477432636c6f7756465530616d6f4b6232393553555a34546e5a6e636c6b34526d6f7256334e736556705562486c714f4656455a6b5a7957576731565734796454525a545752425a53746a5547597857457372515339514f5668594e3039434e47356d4d51705062306457516a5a33636b4d76616d684d596e5a50534459314d484a3556566c766347565a6147785457486848626b5130646d4e3256485a6a6355784d516974315a54497661586c546546464d634670534c7a5a57436e4e554d325a47636b5676626e704756484675526b4e33513059794f476c51626b7057516d70594e6c517653474e55536a553153555272596e52766447467956545a6a6433644f543068755347743656334a324e326b4b64486c5161314930523255784d576874566b633555577053543351314e6d566f57475a4763305a764e55317855335a7863466c776246687253533936565535744f476f76624846465a465577556c6856636a517854416f7961486c4c57533977566d707a5a32316c56484e4f4e79396163554644613068355a546c47596d74574f565976566d4a556144646f56315a4d5648464855326733516c6b765244646e643039335a6e564c61584579436c52335355524255554643436930744c5330745255354549464a545153425156554a4d53554d615330565a4c5330744c53304b00000000000000000000000000000000000000000000000000000000",
   "blockNumber":"0x632C07",
   "transactionHash":"0xaea28c811c676e183222b78aa4485b27e37d5b085a133854c0a9305213895bda",
   "transactionIndex":"0x0",
   "blockHash":"0x7287708cba0e487493ac5be64d5145b373255f8ec85d699698b4d66d1c998f26",
   "logIndex":"0x3",
   "removed":false
}`

	logger := logex.Build("test", zap.DebugLevel, nil)
	t.Run("legacy operator added", func(t *testing.T) {
		legacyLogOperatorAdded, legacyContractAbi := unmarshalLog(t, OldRawOperatorAdded, Legacy)
		abiParser := NewParser(logger, Legacy)
		parsed, err := abiParser.ParseOperatorAddedEvent(legacyLogOperatorAdded.Data, nil, legacyContractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.NotNil(t, legacyContractAbi)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, parsed)
		require.Equal(t, "asdas", parsed.Name)
		require.Equal(t, "0x67Ce5c69260bd819B4e0AD13f4b873074D479811", parsed.OwnerAddress.Hex())
	})

	t.Run("v1 operator added", func(t *testing.T) {
		LogOperatorAdded, contractAbi := unmarshalLog(t, rawOperatorAdded, V1)
		abiParser := NewParser(logger, V1)
		parsed, err := abiParser.ParseOperatorAddedEvent(LogOperatorAdded.Data, LogOperatorAdded.Topics, contractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.NotNil(t, contractAbi)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, parsed)
		require.Equal(t, "TestOperator888", parsed.Name)
		require.Equal(t, "LS0895649UdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOHRXRG0xbTNtYW5Ra0xweVpLMzcKMGNHRGoydlBTWStRWVFBd3BWOXZpWThKVlgzT2J0VjNLL24xNy9peGZ2VEx5aGZKckgzYStpS1NIcDl5WEU4cQp6N2RhOTlaVzU4RzAyeDF0ZnpuV1REMmFpbklpMDAwdjQ5RjFTdzlYOUttQUg5VzNGdjBaREpadzZKVFd3R0ZiCmZiTmM2cGVvTG5ucnllWlVXb09ZQms0TVg2Um9QV2ZXNUJEaURaeHFqVjdvbFV3ZnFBMW5OeU96RXFCMEtkSW8KbExSZFA4ODZBNFJrZGpjUDc5aWdrM0RjVVdCMDhpZlM4SFlvS012ZUZrek0yR2dmOG5LRnFmSnFYNzlybFR4cApSTnlheUZOYXhZWEY4enBBMHlYRGFHQ0I1TitzZ1N2Yjg1WDAydWVCa1NadFFUMUMyTGMxWlZkbERFZVpGNFNlCkh3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
			string(parsed.PublicKey))
		require.Equal(t, "0xa5cfD290965372553Efd5fDaeB91C335207b76E2", parsed.OwnerAddress.Hex())
	})

	t.Run("v2 operator added", func(t *testing.T) {
		LogOperatorAdded, contractAbi := unmarshalLog(t, rawOperatorAddedV2, V2)
		abiParser := NewParser(logger, V2)
		parsed, err := abiParser.ParseOperatorAddedEvent(LogOperatorAdded.Data, LogOperatorAdded.Topics, contractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, contractAbi)
		require.NotNil(t, parsed)
		require.Equal(t, "asddas", parsed.Name)
		require.Equal(t, "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb3dFN09FYnd5TGt2clowVFU0amoKb295SUZ4TnZnclk4RmorV3NseVpUbHlqOFVEZkZyWWg1VW4ydTRZTWRBZStjUGYxWEsrQS9QOVhYN09CNG5mMQpPb0dWQjZ3ckMvamhMYnZPSDY1MHJ5VVlvcGVZaGxTWHhHbkQ0dmN2VHZjcUxMQit1ZTIvaXlTeFFMcFpSLzZWCnNUM2ZGckVvbnpGVHFuRkN3Q0YyOGlQbkpWQmpYNlQvSGNUSjU1SURrYnRvdGFyVTZjd3dOT0huSGt6V3J2N2kKdHlQa1I0R2UxMWhtVkc5UWpST3Q1NmVoWGZGc0ZvNU1xU3ZxcFlwbFhrSS96VU5tOGovbHFFZFUwUlhVcjQxTAoyaHlLWS9wVmpzZ21lVHNONy9acUFDa0h5ZTlGYmtWOVYvVmJUaDdoV1ZMVHFHU2g3QlkvRDdnd093ZnVLaXEyClR3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMaS0VZLS0tLS0K",
			string(parsed.PublicKey))
		require.Equal(t, "0x67Ce5c69260bd819B4e0AD13f4b873074D479811", parsed.OwnerAddress.Hex())
		require.Equal(t, uint64(1), parsed.Id.Uint64())
	})
}

func TestParseValidatorAddedEvent(t *testing.T) {
	legacyRawValidatorAdded := `{
  "address": "0x9573c41f0ed8b72f3bd6a9ba6e3e15426a0aa65b",
  "topics": [
	"0x8674c0b4bd63a0814bf1ae6d64d71cf4886880a8bdbd3d7c1eca89a37d1e9271"
  ],
  "data": "",
  "blockNumber": "0x4a3a2e",
  "transactionHash": "0x20b673d0be280a38daa4f636ec6ad1108c0635dcb35c603f8e401a4120a2b506",
  "transactionIndex": "0x3",
  "blockHash": "0x579a98700bc9f9b1dc6ea3d00f9fd43bf28bd795f615210fd138fe724b8654d4",
  "logIndex": "0x2",
  "removed": false
}`
	rawValidatorAdded := `{
   "address":"0xd594c1ef4845713e86658cb42227a811625a285b",
   "topics":[
      "0x088097840a21a2c763dd9bd97cc2b0b27628bb6a42124a398260fac7f31ff571"
   ],
   "data":"",
   "blockNumber":"0x5b5dc0",
   "transactionHash":"0x39fc924907817a759b41abd98353d3f94b9b1c159a796ad2f5339cbd2ed24dbd",
   "transactionIndex":"0x0",
   "blockHash":"0x021be90e25602cddc56386db2b690d427c05c9de288ca7c39f389157ba08c903",
   "logIndex":"0x2",
   "removed":false
}`

	rawValidatorAddedV2 := `{
   "address":"0x76B1c8E85A43c665eBC4aE1f8ea0Aebd2CAdd11e",
   "topics":[
      "0x6e286e5e846c983ab60768f7550b0305388a1c452194a6db2cd6902bcf52e5bb"
   ],
   "data":"0x000000000000000000000000feedb14d8b2c76fdf808c29818b06b830e8c2c0e00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000030a49871a0b87d674435ac1bb62bb78a27a29bc0901ad7a3b77e564c02644f55da0e72c18e888ca78f8290a8b9c0825dde0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000003090d8b15e48a65c48e0e90184c345ac49db1073550841087150199f9e25f76595662104703c46b12f1001cbba59211361000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030896d999a3cbbb4b3a462fefdb351b2f94f4c14bb44abe99701c77632140d807d3c5b46e8f66e67e8479d787e87636e10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030a0a90424720deede84ecea2d5855c3b56d53726d585fc32c52c239b317d6c4d93abb4938556c81a42c6fed0e0c60cd740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000309177946b30a048cb6b29037c6c1d72cf61bd9a093497d40f93df8df76e813de5d64c74114f5373e8c18d7c8634e0a40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000240000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000158524c38536f546278683852666c565061506734454454356e5a6665516957465063563979794d2b534a7652383676377375766f636d466e33794c534552384e7459345263713147674333713138726c656b4f4959483457674e3078644667424b734e76315a764333484775486b584b31657548637a6a632b33697175334d4e6377556655732f586d4f6d6d492f6c417972784c5a4e3743685964594f2f3946554c797435336c663169306e7756724d4c6e39466e566564726d69784d58516f4c55334b5970427a556c68466d354d77595077757130454d3543727936393731546b6e4c4b2b3157734d79306841347335795756446a6e417a38613774415979364d37427449644843564841623146385661356e534343497872687246617151647055324e48486551795939444a635950786b5a38374a45716d796f643447693669336a756275677651395862326b49386b6a495554513d3d000000000000000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001584831354d624b69512f344b596544612b4a52367968547978366b782b71703967366336627533647a4249465971616c33754654706c4e366965695a665a78435052674b55356c353433483670724c35306d7952716b527171466d4b5941666976775641776862344c654f4b56342b4a752b632f7837367838616475444a74506d674d3559343964612f724459346d664e704d6436425561435651476139534d36366759664534574276516170776478397a626466593345574246397152494c6e70764539556776496649595956566b4534486a68636237387366756a6748756c376b56745056696336506a3034725a77756252723533764b2b78472f2f6c30422b4f31456f496b6f7048446b74615674712f424c39654b482f593735694d79762f7445667659326f2f776b3043686d75335449456d334b61766670694432457048416f582b39484a6e446d6f466d786e6f4f4f386c513d3d000000000000000000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001586d6d6a4c497a326e30574b78354c306442502f5577534c76717a416c364e35584b596e576979457845627872382f586f3575334b39546b7265345a6a7974464b667173736f54397a784a39452b48564f686f7a507757516d4d766f6558636e3856636175594e4c745a474d4f3548742b4d593375574259574141703447446b414d4d4a617939666f745457655675344a7248512f61442f4d43362b707531736a7067666e6e44677a6a734d4539473362676668733854616c67386a5163325042516247504a5238584154784f6b57667a64316e466c6536345736427146352f614d6f4b317644785948515335553345576a4134547545554752466749643150345a4a68325a6e57487861685a717038314354456a384e585675453639666f696d596f7a4a2b7758326a734a6671504964433570534a362f2f696d626c4a3437746f37524d724e584a59334f2f4c4c4c2b64585a3442773d3d000000000000000000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000015864436957546b666138362f6e352b704d437772395066314e2f6c4e6b663179614444335a64686c764972496c5153344e46417761785239486b4d53466867535874713641613965456f52724f3352462b7a6c6e30713373485a472f62704d356b7a68696a6d52796e465952492b3973754d4d7173473166792b472b6d5244474d376d696e4d41754148667a66434763344b70457a31324846747170395155775546774367347450475255774e554b2b676976586178425730634e62553534344f335844554532634b4b653968595a6b4a515256356a4c7476425477616a714246383746332b435877477861344363695165664d74704a467376414c2f7a47495545447a463044494357756542496a4f305944452f2f6d56516a75556571446935557a36736d5277634969666c7833547837775676777966714273535464506f55476775723146717a6742646573687559434c4c5066773d3d0000000000000000",
   "blockNumber":"0x6332B1",
   "transactionHash":"0x07bc195a03f5b9ff3adfbb629d4956567daa83c3e59c701beb54342db65ea558",
   "transactionIndex":"0x0",
   "blockHash":"0xc19e1e28ca532a4a4d1b6d4f2350d1c1aa669cc1c65a4112e56606554b8cc2d2",
   "logIndex":"0x1",
   "removed":false
}`

	t.Run("legacy validator added", func(t *testing.T) {
		vLogValidatorAdded, contractAbi := unmarshalLog(t, legacyRawValidatorAdded, Legacy)
		abiParser := NewParser(logex.Build("test", zap.InfoLevel, nil), Legacy)
		parsed, err := abiParser.ParseValidatorAddedEvent(vLogValidatorAdded.Data, contractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.NotNil(t, contractAbi)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, parsed)
		require.Equal(t, "91db3a13ab428a6c9c20e7104488cb6961abeab60e56cf4ba199eed3b5f6e7ced670ecb066c9704dc2fa93133792381c", hex.EncodeToString(parsed.PublicKey))
	})

	t.Run("v1 validator added", func(t *testing.T) {
		vLogValidatorAdded, contractAbi := unmarshalLog(t, rawValidatorAdded, V1)
		abiParser := NewParser(logex.Build("test", zap.InfoLevel, nil), V1)
		parsed, err := abiParser.ParseValidatorAddedEvent(vLogValidatorAdded.Data, contractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.NotNil(t, contractAbi)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, parsed)
		require.Equal(t, "8687eb8b88ff9c39e659c47b7bb76665fabfc4fc02c4246caca49700242fa9260a145969ede608b10c711ef2d57d0da1", hex.EncodeToString(parsed.PublicKey))
		require.Equal(t, "0x4e409dB090a71D14d32AdBFbC0A22B1B06dde7dE", parsed.OwnerAddress.Hex())
		operators := []string{"LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBN2pXcExremd2TXdvRzhNdEVyUjIKRGhUMk11dElmYUd0VmxMeDVWK2g4amwrdnlxT1YvcmxKREVlQy9HMzVpV0M0WEU3RnFKUVc1QmpvQWZ1TXhQegpRQzZ6MEE1b1I3enRuWHU2c0V3TkhJSFh3REFITHlTdVdQM3BGYlo0Qnc5b1FZTUJmbVNsL3hXR0syVnN3aVhkCkNFcUZKRmdNUFk3NlJQY0o2R2dkTWcrWVRRWVVFamlRTjFpdmJKZjRWaUpCRTcrbVNteFZNNTAzVmlyQWZndkIKenBndTNzdHZIdHpRV1Z2eHJ0NTR0Rm9DMHRmWE1RRXNSU0VtTVRoVkhocVorZTJCOC9kTWQ2R1FodnE5ZXR1RQphQkxoSlpFUXlpMklpUU02Ulg2a01vZGdGUmcvemttTFZXQ0VITzEzaFV5Rkoxang1L0M5bEIyU2VENW9jd1h4CmJRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb3pVaGFzSG9HeE1YS3pUbzgrSHcKWGV0enJtWENYOTdteXBpaHhjL2wxSEllSVVwV2V3NkFNMzlPd1JQZ2VVMFZ3QmQ2NHZhbzZsTTNaQWxTdVZlMgpablN0T01JckJTWGVsYkc0b1BrRG5xZkNNbGJma1RNRlhXVFowdE1IdGJwVkU3N2o0aEpxaUI3ZU13YitwNXUxClovNmVxWjZmRWRnODI5MzN3ZUhhVWNzd2ZJQmhYNlNaUjNlMkJvRUJ2bHljNE5ENEFoNVFaZjMrRWpxSit5dHYKc3hiRm5MNUpLWWhjSlc4YmtCdzNoM2VreUYyY2I2eUE3M3dsTzZhWklaRWJ4QkE0WDl4WjhMSFBaNHJYWG9GbwpoMVFCd1IxOUVhemF5b0h1TmJkWGpBbU9hc1ViT0ttNFJBdk9ya1FwZ1I4S0J4NGMzczk0OFlidTBJRktQb0NICkJ3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcjZXc09kMzJZVStPeVowVVZtUlYKQkhEREtLM2U1OTRpUzV2dHRLMVJiMlVYd3YwNGZKcGd4L1NQWmlqUmE0eFdmc3ZsaTMxeHg1c2srMlh6OTJ1VQo5TlE4OGRlL0YxemJtanQwM25wWjhaS253cm1LOXZURE9PZFY4M1RiMUNYTzFhb3J2eVM1MERiZTlSbHE2SGNDCnVuTTRaQnk0SHdvZ2pBZjY2YTFCc085eGx2Rjc0UEgrRTJ0Q1k0ZVYwL1M4VFdHbjh4R0dITW5GT0l1UmRMUTAKemMvQ0pPVjBIK1daSEVEZTcyNU8wR1AwTXV0QmNHZWE1R3A4ckZwWHkvMDFBdmlXajBnMDdqMFR1M0hZN0dlSwovZVNTL1hWOGJURG44M0ZQbE54WHdyVml3czl0cGxzTFMxeUxSN0xxT2NYYVl4NHRLY3FrVTQ0UFhmem9UeC9BCmh3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdVIzV0hmU1lhWlE0NjkxenR0aTYKZlBBcExqa29LcysrQS90QWdSVXdHbEhXYm5iNjJPVU4ra0tTUU53VWlNMFRwWGdOVHVSNGpjdWdKa1NTRlRSRAp5WEwvSXRpbzlFZHE3aEhRQ3BEQ0xCVFNYRlNtMjJrNlNRbllGeWs3UVNndnoyQW9mOXJ6YVdBQmVmUkZPdUs5CnFWT00rbzhnRnFwcXlQRnRJRy9CVS9Fb1l2M0FNU1A5UWJCTXRXSkIvcTd2QStZMUFrZEJiYUNuaGFkK1FUWGwKY1VkSzRabHZ1NVdFWkxLdC9OMlU1RGQwaFh4RXBuRlo3L01SNVRnRVl2NFl3aUpHeWNyRTFKWGVSU2MrM21DWQpKekVzYjJPWTBTZE83YjBMcWdqM2hVa0RtcEdVS2NoQlQyaGw0NWJ5ak4valZjUW1rb29lYUgzSCt2R2IvNzhVCkV3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"}
		for i, pk := range parsed.OperatorPublicKeys {
			require.Equal(t, operators[i], string(pk))
		}
		shares := []string{"adb6d42245eaf4b00909679642964d6d5c12c4c550eaffcee499a12ea731c5f101f43a3880b9363daf873ae455fa7aa6", "b6de3081ad9a8becd37676827afb46386eeaa4cd7ebf8711a37505d3c5d3a7a3c1e167e3031e98094ed5262ec65ff205", "ad4754bd8ca755db23a0701d0dd5488403f9092912b09bcef95b8f70b380b528effd395fb3f06f92c515acf618f2cfa9", "97fceae9c1eeaeb5f9c8ebf875b7bc8248c514fe0c847cb2a15e662595ec6e214ebe3351f9b79629185008be0a1d1f50"}
		for i, pk := range parsed.SharesPublicKeys {
			require.Equal(t, shares[i], hex.EncodeToString(pk))
		}
	})

	t.Run("v2 validator added", func(t *testing.T) {
		vLogValidatorAdded, contractAbi := unmarshalLog(t, rawValidatorAddedV2, V2)
		abiParser := NewParser(logex.Build("test", zap.InfoLevel, nil), V2)
		parsed, err := abiParser.ParseValidatorAddedEvent(vLogValidatorAdded.Data, contractAbi)
		var unpackErr *abiparser.UnpackError
		require.NoError(t, err)
		require.NotNil(t, contractAbi)
		require.False(t, errors.As(err, &unpackErr))
		require.NotNil(t, parsed)
		require.Equal(t, "a49871a0b87d674435ac1bb62bb78a27a29bc0901ad7a3b77e564c02644f55da0e72c18e888ca78f8290a8b9c0825dd2", hex.EncodeToString(parsed.PublicKey))
		require.Equal(t, "0xFeedB14D8b2C76FdF808C29818b06b830E8C2c0e", parsed.OwnerAddress.Hex())
		operators := []string{"LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBN2pXcExremd2TXdvRzhNdEVyUjIKRGhUMk11dElmYUd0VmxMeDVWK2g4amwrdnlxT1YvcmxKREVlQy9HMzVpV0M0WEU3RnFKUVc1QmpvQWZ1TXhQegpRQzZ6MEE1b1I3enRuWHU2c0V3TkhJSFh3REFITHlTdVdQM3BGYlo0Qnc5b1FZTUJmbVNsL3hXR0syVnN3aVhkCkNFcUZKRmdNUFk3NlJQY0o2R2dkTWcrWVRRWVVFamlRTjFpdmJKZjRWaUpCRTcrbVNteFZNNTAzVmlyQWZndkIKenBndTNzdHZIdHpRV1Z2eHJ0NTR0Rm9DMHRmWE1RRXNSU0VtTVRoVkhocVorZTJCOC9kTWQ2R1FodnE5ZXR1RQphQkxoSlpFUXlpMklpUU02Ulg2a01vZGdGUmcvemttTFZXQ0VITzEzaFV5Rkoxang1L0M5bEIyU2VENW9jd1h4CmJRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBb3pVaGFzSG9HeE1YS3pUbzgrSHcKWGV0enJtWENYOTdteXBpaHhjL2wxSEllSVVwV2V3NkFNMzlPd1JQZ2VVMFZ3QmQ2NHZhbzZsTTNaQWxTdVZlMgpablN0T01JckJTWGVsYkc0b1BrRG5xZkNNbGJma1RNRlhXVFowdE1IdGJwVkU3N2o0aEpxaUI3ZU13YitwNXUxClovNmVxWjZmRWRnODI5MzN3ZUhhVWNzd2ZJQmhYNlNaUjNlMkJvRUJ2bHljNE5ENEFoNVFaZjMrRWpxSit5dHYKc3hiRm5MNUpLWWhjSlc4YmtCdzNoM2VreUYyY2I2eUE3M3dsTzZhWklaRWJ4QkE0WDl4WjhMSFBaNHJYWG9GbwpoMVFCd1IxOUVhemF5b0h1TmJkWGpBbU9hc1ViT0ttNFJBdk9ya1FwZ1I4S0J4NGMzczk0OFlidTBJRktQb0NICkJ3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcjZXc09kMzJZVStPeVowVVZtUlYKQkhEREtLM2U1OTRpUzV2dHRLMVJiMlVYd3YwNGZKcGd4L1NQWmlqUmE0eFdmc3ZsaTMxeHg1c2srMlh6OTJ1VQo5TlE4OGRlL0YxemJtanQwM25wWjhaS253cm1LOXZURE9PZFY4M1RiMUNYTzFhb3J2eVM1MERiZTlSbHE2SGNDCnVuTTRaQnk0SHdvZ2pBZjY2YTFCc085eGx2Rjc0UEgrRTJ0Q1k0ZVYwL1M4VFdHbjh4R0dITW5GT0l1UmRMUTAKemMvQ0pPVjBIK1daSEVEZTcyNU8wR1AwTXV0QmNHZWE1R3A4ckZwWHkvMDFBdmlXajBnMDdqMFR1M0hZN0dlSwovZVNTL1hWOGJURG44M0ZQbE54WHdyVml3czl0cGxzTFMxeUxSN0xxT2NYYVl4NHRLY3FrVTQ0UFhmem9UeC9BCmh3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K", "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdVIzV0hmU1lhWlE0NjkxenR0aTYKZlBBcExqa29LcysrQS90QWdSVXdHbEhXYm5iNjJPVU4ra0tTUU53VWlNMFRwWGdOVHVSNGpjdWdKa1NTRlRSRAp5WEwvSXRpbzlFZHE3aEhRQ3BEQ0xCVFNYRlNtMjJrNlNRbllGeWs3UVNndnoyQW9mOXJ6YVdBQmVmUkZPdUs5CnFWT00rbzhnRnFwcXlQRnRJRy9CVS9Fb1l2M0FNU1A5UWJCTXRXSkIvcTd2QStZMUFrZEJiYUNuaGFkK1FUWGwKY1VkSzRabHZ1NVdFWkxLdC9OMlU1RGQwaFh4RXBuRlo3L01SNVRnRVl2NFl3aUpHeWNyRTFKWGVSU2MrM21DWQpKekVzYjJPWTBTZE83YjBMcWdqM2hVa0RtcEdVS2NoQlQyaGw0NWJ5ak4valZjUW1rb29lYUgzSCt2R2IvNzhVCkV3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"}
		for i, pk := range parsed.OperatorPublicKeys {
			require.Equal(t, operators[i], string(pk))
		}
		shares := []string{"90d8b15e48a65c48e0e90184c345ac49db1073550841087150199f9e25f76595662104703c46b12f1001cbba59211361", "896d999a3cbbb4b3a462fefdb351b2f94f4c14bb44abe99701c77632140d807d3c5b46e8f66e67e8479d787e87636e10", "a0a90424720deede84ecea2d5855c3b56d53726d585fc32c52c239b317d6c4d93abb4938556c81a42c6fed0e0c60cd74", "9177946b30a048cb6b29037c6c1d72cf61bd9a093497d40f93df8df76e813de5d64c74114f5373e8c18d7c8634e0a400"}
		for i, pk := range parsed.SharesPublicKeys {
			require.Equal(t, shares[i], hex.EncodeToString(pk))
		}
	})
}

func unmarshalLog(t *testing.T, rawOperatorAdded string, abiVersion Version) (*types.Log, abi.ABI) {
	var vLogOperatorAdded types.Log
	err := json.Unmarshal([]byte(rawOperatorAdded), &vLogOperatorAdded)
	require.NoError(t, err)
	contractAbi, err := abi.JSON(strings.NewReader(ContractABI(abiVersion)))
	require.NoError(t, err)
	require.NotNil(t, contractAbi)
	return &vLogOperatorAdded, contractAbi
}
