// Code generated by MockGen. DO NOT EDIT.
// Source: ./duty_executor.go

// Package dutyexecutor is a generated GoMock package.
package dutyexecutor

import (
	reflect "reflect"

	types "github.com/bloxapp/ssv-spec/types"
	gomock "github.com/golang/mock/gomock"
)

// MockDutyExecutor is a mock of DutyExecutor interface.
type MockDutyExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockDutyExecutorMockRecorder
}

// MockDutyExecutorMockRecorder is the mock recorder for MockDutyExecutor.
type MockDutyExecutorMockRecorder struct {
	mock *MockDutyExecutor
}

// NewMockDutyExecutor creates a new mock instance.
func NewMockDutyExecutor(ctrl *gomock.Controller) *MockDutyExecutor {
	mock := &MockDutyExecutor{ctrl: ctrl}
	mock.recorder = &MockDutyExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDutyExecutor) EXPECT() *MockDutyExecutorMockRecorder {
	return m.recorder
}

// ExecuteDuty mocks base method.
func (m *MockDutyExecutor) ExecuteDuty(duty *types.Duty) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExecuteDuty", duty)
}

// ExecuteDuty indicates an expected call of ExecuteDuty.
func (mr *MockDutyExecutorMockRecorder) ExecuteDuty(duty interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteDuty", reflect.TypeOf((*MockDutyExecutor)(nil).ExecuteDuty), duty)
}
