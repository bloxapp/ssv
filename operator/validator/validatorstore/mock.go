// Code generated by MockGen. DO NOT EDIT.
// Source: ./validator_store.go

// Package validatorstore is a generated GoMock package.
package validatorstore

import (
	reflect "reflect"

	phase0 "github.com/attestantio/go-eth2-client/spec/phase0"
	types "github.com/bloxapp/ssv/protocol/v2/types"
	storage "github.com/bloxapp/ssv/registry/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockValidatorStore is a mock of ValidatorStore interface.
type MockValidatorStore struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorStoreMockRecorder
}

// MockValidatorStoreMockRecorder is the mock recorder for MockValidatorStore.
type MockValidatorStoreMockRecorder struct {
	mock *MockValidatorStore
}

// NewMockValidatorStore creates a new mock instance.
func NewMockValidatorStore(ctrl *gomock.Controller) *MockValidatorStore {
	mock := &MockValidatorStore{ctrl: ctrl}
	mock.recorder = &MockValidatorStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidatorStore) EXPECT() *MockValidatorStoreMockRecorder {
	return m.recorder
}

// AllActiveIndices mocks base method.
func (m *MockValidatorStore) AllActiveIndices(epoch phase0.Epoch) []phase0.ValidatorIndex {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllActiveIndices", epoch)
	ret0, _ := ret[0].([]phase0.ValidatorIndex)
	return ret0
}

// AllActiveIndices indicates an expected call of AllActiveIndices.
func (mr *MockValidatorStoreMockRecorder) AllActiveIndices(epoch interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllActiveIndices", reflect.TypeOf((*MockValidatorStore)(nil).AllActiveIndices), epoch)
}

// CommitteeActiveIndices mocks base method.
func (m *MockValidatorStore) CommitteeActiveIndices(epoch phase0.Epoch) []phase0.ValidatorIndex {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CommitteeActiveIndices", epoch)
	ret0, _ := ret[0].([]phase0.ValidatorIndex)
	return ret0
}

// CommitteeActiveIndices indicates an expected call of CommitteeActiveIndices.
func (mr *MockValidatorStoreMockRecorder) CommitteeActiveIndices(epoch interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CommitteeActiveIndices", reflect.TypeOf((*MockValidatorStore)(nil).CommitteeActiveIndices), epoch)
}

// GetOperatorShares mocks base method.
func (m *MockValidatorStore) GetOperatorShares() []*types.SSVShare {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperatorShares")
	ret0, _ := ret[0].([]*types.SSVShare)
	return ret0
}

// GetOperatorShares indicates an expected call of GetOperatorShares.
func (mr *MockValidatorStoreMockRecorder) GetOperatorShares() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperatorShares", reflect.TypeOf((*MockValidatorStore)(nil).GetOperatorShares))
}

// GetValidatorStats mocks base method.
func (m *MockValidatorStore) GetValidatorStats() storage.ValidatorStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatorStats")
	ret0, _ := ret[0].(storage.ValidatorStats)
	return ret0
}

// GetValidatorStats indicates an expected call of GetValidatorStats.
func (mr *MockValidatorStoreMockRecorder) GetValidatorStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatorStats", reflect.TypeOf((*MockValidatorStore)(nil).GetValidatorStats))
}
