// Code generated by MockGen. DO NOT EDIT.
// Source: ./fetcher.go

// Package mocks is a generated GoMock package.
package mocks

// TODO(oleg) mock

import (
	reflect "reflect"

	phase0 "github.com/attestantio/go-eth2-client/spec/phase0"
	types "github.com/bloxapp/ssv-spec/types"
	gomock "github.com/golang/mock/gomock"
)

// MockvalidatorsIndicesFetcher is a mock of validatorsIndicesFetcher interface.
type MockvalidatorsIndicesFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockvalidatorsIndicesFetcherMockRecorder
}

// MockvalidatorsIndicesFetcherMockRecorder is the mock recorder for MockvalidatorsIndicesFetcher.
type MockvalidatorsIndicesFetcherMockRecorder struct {
	mock *MockvalidatorsIndicesFetcher
}

// NewMockvalidatorsIndicesFetcher creates a new mock instance.
func NewMockvalidatorsIndicesFetcher(ctrl *gomock.Controller) *MockvalidatorsIndicesFetcher {
	mock := &MockvalidatorsIndicesFetcher{ctrl: ctrl}
	mock.recorder = &MockvalidatorsIndicesFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvalidatorsIndicesFetcher) EXPECT() *MockvalidatorsIndicesFetcherMockRecorder {
	return m.recorder
}

// GetValidatorsIndices mocks base method.
func (m *MockvalidatorsIndicesFetcher) GetValidatorsIndices() []phase0.ValidatorIndex {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatorsIndices")
	ret0, _ := ret[0].([]phase0.ValidatorIndex)
	return ret0
}

// GetValidatorsIndices indicates an expected call of GetValidatorsIndices.
func (mr *MockvalidatorsIndicesFetcherMockRecorder) GetValidatorsIndices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatorsIndices", reflect.TypeOf((*MockvalidatorsIndicesFetcher)(nil).GetValidatorsIndices))
}

// MockDutyFetcher is a mock of DutyFetcher interface.
type MockDutyFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockDutyFetcherMockRecorder
}

// MockDutyFetcherMockRecorder is the mock recorder for MockDutyFetcher.
type MockDutyFetcherMockRecorder struct {
	mock *MockDutyFetcher
}

// NewMockDutyFetcher creates a new mock instance.
func NewMockDutyFetcher(ctrl *gomock.Controller) *MockDutyFetcher {
	mock := &MockDutyFetcher{ctrl: ctrl}
	mock.recorder = &MockDutyFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDutyFetcher) EXPECT() *MockDutyFetcherMockRecorder {
	return m.recorder
}

// GetDuties mocks base method.
func (m *MockDutyFetcher) GetDuties(slot phase0.Slot) ([]types.Duty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDuties", slot)
	ret0, _ := ret[0].([]types.Duty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDuties indicates an expected call of GetDuties.
func (mr *MockDutyFetcherMockRecorder) GetDuties(slot interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDuties", reflect.TypeOf((*MockDutyFetcher)(nil).GetDuties), slot)
}
