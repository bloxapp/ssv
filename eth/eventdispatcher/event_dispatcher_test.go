package eventdispatcher

import (
	"context"
	"math/big"
	"net/http/httptest"
	"strings"
	"testing"
	"time"

	"github.com/bloxapp/ssv/ekm"
	"github.com/bloxapp/ssv/eth/eventbatcher"
	"github.com/bloxapp/ssv/eth/eventdatahandler"
	"github.com/bloxapp/ssv/eth/eventdb"
	"github.com/bloxapp/ssv/eth/executionclient"
	ibftstorage "github.com/bloxapp/ssv/ibft/storage"
	"github.com/bloxapp/ssv/networkconfig"
	operatorstorage "github.com/bloxapp/ssv/operator/storage"
	"github.com/bloxapp/ssv/operator/validator"
	"github.com/bloxapp/ssv/protocol/v2/blockchain/beacon"
	registrystorage "github.com/bloxapp/ssv/registry/storage"
	"github.com/bloxapp/ssv/storage/basedb"
	"github.com/bloxapp/ssv/storage/kv"
	ethcommon "github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/ethash"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/crypto"
	"github.com/ethereum/go-ethereum/eth"
	"github.com/ethereum/go-ethereum/eth/ethconfig"
	"github.com/ethereum/go-ethereum/eth/filters"
	"github.com/ethereum/go-ethereum/node"
	"github.com/ethereum/go-ethereum/params"
	"github.com/ethereum/go-ethereum/rpc"
	"github.com/golang/mock/gomock"
	"github.com/stretchr/testify/require"
	"go.uber.org/zap"
	"go.uber.org/zap/zaptest"
)

var (
	// testKey is a private key to use for funding a tester account.
	testKey, _ = crypto.HexToECDSA("b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291")
	// testAddr is the Ethereum address of the tester account.
	testAddr     = crypto.PubkeyToAddress(testKey.PublicKey)
	testBalance  = big.NewInt(2e18)
	contractAddr = ethcommon.HexToAddress("0x3A220f351252089D385b29beca14e27F204c296A")
)

func TestEventDispatcher(t *testing.T) {
	logger := zaptest.NewLogger(t)
	const testTimeout = 1000 * time.Millisecond
	ctx, cancel := context.WithTimeout(context.Background(), testTimeout)
	defer cancel()

	blockStream := make(chan []*types.Block)
	defer close(blockStream)
	done := make(chan interface{})
	defer close(done)

	// Create sim instance with a delay between block execution
	backend, processedStream := newTestBackend(t, done, blockStream, time.Microsecond*50)

	rpcServer, _ := backend.RPCHandler()
	httpsrv := httptest.NewServer(rpcServer.WebsocketHandler([]string{"*"}))
	defer rpcServer.Stop()
	defer httpsrv.Close()

	addr := "ws:" + strings.TrimPrefix(httpsrv.URL, "http:")
	client := executionclient.New(addr, contractAddr, executionclient.WithLogger(logger))
	client.Connect(ctx)

	_, err := client.IsReady(ctx)
	if err != nil {
		t.Fatal(err)
	}

	eb := eventbatcher.NewEventBatcher()
	ehd := NewEventDataHandler(t, ctx, logger)
	eventDispatcher := New(
		client,
		eb,
		ehd,
		WithLogger(logger),
	)
	// Generate test chain after a connection to the server.
	// While processing blocks the events will be emited which is read by subscription
	generateInitialTestChain(t, done, blockStream, 1000)
	for blocks := range processedStream {
		t.Log("Processed blocks: ", len(blocks))
	}
	err = eventDispatcher.Start(ctx, 0)
	require.NoError(t, err)
}

func NewEventDataHandler(t *testing.T, ctx context.Context, logger *zap.Logger) *eventdatahandler.EventDataHandler {
	options := basedb.Options{
		Type:      "badger-memory",
		Path:      "",
		Reporting: true,
		Ctx:       ctx,
	}

	db, err := kv.New(logger, options)
	require.NoError(t, err)

	eventDB := eventdb.NewEventDB(db.(*kv.BadgerDb).Badger())
	storageMap := ibftstorage.NewStores()
	nodeStorage, operatorData := setupOperatorStorage(logger, db)
	keyManager, err := ekm.NewETHKeyManagerSigner(logger, db, networkconfig.NetworkConfig{}, true)
	if err != nil {
		logger.Fatal("could not create new eth-key-manager signer", zap.Error(err))
	}
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	bc := beacon.NewMockBeaconNode(ctrl)
	validatorCtrl := validator.NewController(logger, validator.ControllerOptions{
		Context:         ctx,
		DB:              db,
		RegistryStorage: nodeStorage,
	})

	edh := eventdatahandler.New(
		eventDB,
		validatorCtrl,
		operatorData,
		nodeStorage.GetPrivateKey,
		keyManager,
		bc,
		storageMap,
		eventdatahandler.WithFullNode(),
		eventdatahandler.WithLogger(logger))
	return edh
}

func NewEth1Client(t *testing.T, ctx context.Context, done chan interface{}, blockStream chan []*types.Block) (*executionclient.ExecutionClient, <-chan []*types.Block) {
	// Create sim instance with a delay between block execution
	backend, processedStream := newTestBackend(t, done, blockStream, time.Microsecond*50)

	rpcServer, _ := backend.RPCHandler()
	httpsrv := httptest.NewServer(rpcServer.WebsocketHandler([]string{"*"}))
	defer rpcServer.Stop()
	defer httpsrv.Close()

	addr := "ws:" + strings.TrimPrefix(httpsrv.URL, "http:")
	logger := zaptest.NewLogger(t)
	client := executionclient.New(addr, contractAddr, executionclient.WithLogger(logger))
	client.Connect(ctx)
	_, err := client.IsReady(ctx)
	if err != nil {
		t.Fatal(err)
	}
	return client, processedStream
}

var genesis = &core.Genesis{
	Config:    params.AllEthashProtocolChanges,
	Alloc:     core.GenesisAlloc{testAddr: {Balance: testBalance}},
	ExtraData: []byte("test genesis"),
	Timestamp: 9000,
	BaseFee:   big.NewInt(params.InitialBaseFee),
}

func newTestBackend(t *testing.T, done <-chan interface{}, blockStream <-chan []*types.Block, delay time.Duration) (*node.Node, <-chan []*types.Block) {
	processedStream := make(chan []*types.Block)
	// Create node
	n, err := node.New(&node.Config{})

	if err != nil {
		t.Fatalf("can't create new node: %v", err)
	}
	// Create Ethereum Service
	config := &ethconfig.Config{Genesis: genesis}
	ethservice, err := eth.New(n, config)
	if err != nil {
		t.Fatalf("can't create new ethereum service: %v", err)
	}

	// Add required APIs
	filterSystem := filters.NewFilterSystem(ethservice.APIBackend, filters.Config{})
	n.RegisterAPIs([]rpc.API{{
		Namespace: "eth",
		Service:   filters.NewFilterAPI(filterSystem, false),
	}})

	// Start eth1 node
	if err := n.Start(); err != nil {
		t.Fatalf("can't start test node: %v", err)
	}

	go func() {
		defer close(processedStream)
		select {
		case <-done:
			return
		case blocks := <-blockStream:
			if _, err := ethservice.BlockChain().InsertChain(blocks); err != nil {
				return
			}
			processedStream <- blocks
		}
	}()
	return n, processedStream
}

// Generate blocks with transactions
func generateInitialTestChain(t *testing.T, done <-chan interface{}, blockStream chan []*types.Block, n int) {
	generate := func(i int, g *core.BlockGen) {
		g.OffsetTime(5)
		g.SetExtra([]byte("test"))
		if i == 0 {
			return
		}
		// Add contract deployment to the firs block
		if i == 1 {
			tx := types.MustSignNewTx(testKey, types.LatestSigner(genesis.Config), &types.LegacyTx{
				Nonce:    uint64(i - 1),
				Value:    big.NewInt(0),
				GasPrice: big.NewInt(params.InitialBaseFee),
				Gas:      1000000,
				Data:     ethcommon.FromHex(SSVNetworkContractBin),
			})
			g.AddTx(tx)
		} else {
			// Transactions to Callable contract
			tx := types.MustSignNewTx(testKey, types.LatestSigner(genesis.Config), &types.LegacyTx{
				To:       &contractAddr,
				Nonce:    uint64(i - 1),
				Value:    big.NewInt(0),
				GasPrice: big.NewInt(params.InitialBaseFee),
				Gas:      100000,
				Data:     ethcommon.FromHex("0x34e22921"),
			})
			g.AddTx(tx)
		}
	}
	_, blocks, _ := core.GenerateChainWithGenesis(genesis, ethash.NewFaker(), n, generate)
	go func() {
		select {
		case <-done:
		case blockStream <- blocks:
		}
	}()
}

func setupOperatorStorage(logger *zap.Logger, db basedb.IDb) (operatorstorage.Storage, *registrystorage.OperatorData) {
	nodeStorage, err := operatorstorage.NewNodeStorage(logger, db)
	if err != nil {
		logger.Fatal("failed to create node storage", zap.Error(err))
	}
	operatorPubKey, err := nodeStorage.SetupPrivateKey(logger, "", true)
	if err != nil {
		logger.Fatal("could not setup operator private key", zap.Error(err))
	}

	_, found, err := nodeStorage.GetPrivateKey()
	if err != nil || !found {
		logger.Fatal("failed to get operator private key", zap.Error(err))
	}
	var operatorData *registrystorage.OperatorData
	operatorData, found, err = nodeStorage.GetOperatorDataByPubKey(logger, operatorPubKey)
	if err != nil {
		logger.Fatal("could not get operator data by public key", zap.Error(err))
	}
	if !found {
		operatorData = &registrystorage.OperatorData{
			PublicKey: operatorPubKey,
		}
	}

	return nodeStorage, operatorData
}

var SSVNetworkContractBin = "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161417b61008960003960008181610c8d01528181610d1b01528181610ec601528181610f5401528181611004015281816116fd015261178b015261417b6000f3fe6080604052600436106102085760003560e01c806379ba509711610118578063c8c876c6116100a0578063e30c39781161006f578063e30c397814610737578063e3e324b014610762578063eb6080221461078b578063f2fde38b146107b4578063ff212c5c146107dd57610209565b8063c8c876c614610693578063c90a7eab146106bc578063d2231741146106e5578063dbcdc2cc1461070e57610209565b8063b317c35f116100e7578063b317c35f146105c6578063b4c9c408146105ef578063bc26e7e514610618578063bf0f2fb214610641578063c626c3c61461066a57610209565b806379ba50971461053257806379e3e4e4146105495780638932cee0146105725780638da5cb5b1461059b57610209565b80633659cfe61161019b5780635fec6dd01161016a5780635fec6dd0146104625780636512447d1461048b578063686e682c146104b4578063715018a6146104dd5780637398ca6c146104f457610209565b80633659cfe6146103c95780633ed00469146103f25780634f1ef2861461041b57806352d1902d1461043757610209565b806323d68a6d116101d757806323d68a6d146103255780632e168e0e1461034e57806335f63767146103775780633631983f146103a057610209565b806306e8fb9c1461028157806312b3fc19146102aa578063190d82e4146102d35780631f1f9fd5146102fc57610209565b5b34801561021557600080fd5b5061027f61022161081a565b6003016000600380811115610239576102386129c1565b5b600381111561024b5761024a6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b005b34801561028d57600080fd5b506102a860048036038101906102a39190612d33565b61087c565b005b3480156102b657600080fd5b506102d160048036038101906102cc9190612e62565b61097e565b005b3480156102df57600080fd5b506102fa60048036038101906102f59190612ef7565b6109ef565b005b34801561030857600080fd5b50610323600480360381019061031e9190612f37565b610a5c565b005b34801561033157600080fd5b5061034c60048036038101906103479190612f64565b610ad1565b005b34801561035a57600080fd5b5061037560048036038101906103709190612f64565b610b3d565b005b34801561038357600080fd5b5061039e60048036038101906103999190612ef7565b610ba9565b005b3480156103ac57600080fd5b506103c760048036038101906103c29190612f64565b610c16565b005b3480156103d557600080fd5b506103f060048036038101906103eb9190612fef565b610c8b565b005b3480156103fe57600080fd5b506104196004803603810190610414919061301c565b610e13565b005b61043560048036038101906104309190613124565b610ec4565b005b34801561044357600080fd5b5061044c611000565b6040516104599190613199565b60405180910390f35b34801561046e57600080fd5b50610489600480360381019061048491906131b4565b6110b9565b005b34801561049757600080fd5b506104b260048036038101906104ad9190612f64565b611129565b005b3480156104c057600080fd5b506104db60048036038101906104d691906131b4565b61119e565b005b3480156104e957600080fd5b506104f261120e565b005b34801561050057600080fd5b5061051b60048036038101906105169190612fef565b611222565b604051610529929190613237565b60405180910390f35b34801561053e57600080fd5b506105476112c6565b005b34801561055557600080fd5b50610570600480360381019061056b9190612f64565b611353565b005b34801561057e57600080fd5b5061059960048036038101906105949190612f64565b6113c8565b005b3480156105a757600080fd5b506105b0611434565b6040516105bd919061326f565b60405180910390f35b3480156105d257600080fd5b506105ed60048036038101906105e89190612ef7565b61145e565b005b3480156105fb57600080fd5b5061061660048036038101906106119190612f37565b6114cb565b005b34801561062457600080fd5b5061063f600480360381019061063a919061328a565b611540565b005b34801561064d57600080fd5b5061066860048036038101906106639190613313565b6115b1565b005b34801561067657600080fd5b50610691600480360381019061068c91906134bd565b611621565b005b34801561069f57600080fd5b506106ba60048036038101906106b59190612f64565b6118a8565b005b3480156106c857600080fd5b506106e360048036038101906106de91906135b1565b611914565b005b3480156106f157600080fd5b5061070c60048036038101906107079190612f37565b611981565b005b34801561071a57600080fd5b5061073560048036038101906107309190612fef565b6119f6565b005b34801561074357600080fd5b5061074c611a47565b604051610759919061326f565b60405180910390f35b34801561076e57600080fd5b5061078960048036038101906107849190613616565b611a71565b005b34801561079757600080fd5b506107b260048036038101906107ad9190612f64565b611a87565b005b3480156107c057600080fd5b506107db60048036038101906107d69190612fef565b611afc565b005b3480156107e957600080fd5b5061080460048036038101906107ff9190613656565b611ba9565b60405161081191906136c5565b60405180910390f35b60008060017fd56c4f4aab8ca22f9fde432777379f436593c6027698a6995e2daea890bed10560001c61084d919061370f565b90508091505090565b3660008037600080366000845af43d6000803e8060008114610877573d6000f35b3d6000fd5b610884611caa565b60000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1661090b576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097561091661081a565b60030160006001600381111561092f5761092e6129c1565b5b6003811115610941576109406129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50505050505050565b6109e861098961081a565b6003016000600160038111156109a2576109a16129c1565b5b60038111156109b4576109b36129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050505050565b610a586109fa61081a565b6003016000806003811115610a1257610a116129c1565b5b6003811115610a2457610a236129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050565b610a64611ce6565b610ace610a6f61081a565b600301600060026003811115610a8857610a876129c1565b5b6003811115610a9a57610a996129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b610b3a610adc61081a565b6003016000806003811115610af457610af36129c1565b5b6003811115610b0657610b056129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b610ba6610b4861081a565b6003016000806003811115610b6057610b5f6129c1565b5b6003811115610b7257610b716129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b610c12610bb461081a565b6003016000806003811115610bcc57610bcb6129c1565b5b6003811115610bde57610bdd6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050565b610c1e611ce6565b610c88610c2961081a565b600301600060026003811115610c4257610c416129c1565b5b6003811115610c5457610c536129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d10906137c6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610d58611d64565b73ffffffffffffffffffffffffffffffffffffffff1614610dae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da590613858565b60405180910390fd5b610db781611dbb565b610e1081600067ffffffffffffffff811115610dd657610dd5612a7a565b5b6040519080825280601f01601f191660200182016040528015610e085781602001600182028036833780820191505090505b506000611dc6565b50565b610e1b611ce6565b60405180604001604052808315158152602001821515815250610e3c611caa565b60000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff021916908315150217905550905050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f49906137c6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610f91611d64565b73ffffffffffffffffffffffffffffffffffffffff1614610fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde90613858565b60405180910390fd5b610ff082611dbb565b610ffc82826001611dc6565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611087906138ea565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6111236110c461081a565b6003016000600160038111156110dd576110dc6129c1565b5b60038111156110ef576110ee6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50505050565b611131611ce6565b61119b61113c61081a565b600301600060026003811115611155576111546129c1565b5b6003811115611167576111666129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b6112086111a961081a565b6003016000600160038111156111c2576111c16129c1565b5b60038111156111d4576111d36129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50505050565b611216611ce6565b6112206000611f34565b565b600080600061122f611caa565b60000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815250509050806000015181602001519250925050915091565b60006112d0611f65565b90508073ffffffffffffffffffffffffffffffffffffffff166112f1611a47565b73ffffffffffffffffffffffffffffffffffffffff1614611347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133e9061397c565b60405180910390fd5b61135081611f34565b50565b61135b611ce6565b6113c561136661081a565b60030160006002600381111561137f5761137e6129c1565b5b6003811115611391576113906129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b6114316113d361081a565b60030160008060038111156113eb576113ea6129c1565b5b60038111156113fd576113fc6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6114c761146961081a565b6003016000806003811115611481576114806129c1565b5b6003811115611493576114926129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050565b6114d3611ce6565b61153d6114de61081a565b6003016000600260038111156114f7576114f66129c1565b5b6003811115611509576115086129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b6115aa61154b61081a565b600301600060016003811115611564576115636129c1565b5b6003811115611576576115756129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050505050565b61161b6115bc61081a565b6003016000600160038111156115d5576115d46129c1565b5b60038111156115e7576115e66129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50505050565b60008060019054906101000a900460ff161590508080156116525750600160008054906101000a900460ff1660ff16105b8061167f575061166130611f6d565b15801561167e5750600160008054906101000a900460ff1660ff16145b5b6116be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b590613a0e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156116fb576001600060016101000a81548160ff0219169083151502179055505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1603611789576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611780906137c6565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166117c8611d64565b73ffffffffffffffffffffffffffffffffffffffff161461181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181590613858565b60405180910390fd5b611826611f90565b61182e611fe1565b6118418c8c8c8c8c8c8c8c8c8c8c612042565b801561189a5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516118919190613a80565b60405180910390a15b505050505050505050505050565b6119116118b361081a565b60030160008060038111156118cb576118ca6129c1565b5b60038111156118dd576118dc6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b61197d61191f61081a565b6003016000806003811115611937576119366129c1565b5b6003811115611949576119486129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b5050565b611989611ce6565b6119f361199461081a565b6003016000600260038111156119ad576119ac6129c1565b5b60038111156119bf576119be6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b3373ffffffffffffffffffffffffffffffffffffffff167f259235c230d57def1521657e7c7951d3b385e76193378bc87ef6b56bc2ec354882604051611a3c919061326f565b60405180910390a250565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a79611ce6565b611a8382826123df565b5050565b611a8f611ce6565b611af9611a9a61081a565b600301600060026003811115611ab357611ab26129c1565b5b6003811115611ac557611ac46129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b50565b611b04611ce6565b8060c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16611b64611434565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000611bb3611caa565b60000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16611c3a576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ca3611c4561081a565b6003016000806003811115611c5d57611c5c6129c1565b5b6003811115611c6f57611c6e6129c1565b5b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610856565b9392505050565b60008060017f196806efe090e1bda0d29c02ba14a5bb8bb3b27efb6435fb21c1deec930cb23960001c611cdd919061370f565b90508091505090565b611cee611f65565b73ffffffffffffffffffffffffffffffffffffffff16611d0c611434565b73ffffffffffffffffffffffffffffffffffffffff1614611d62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5990613ae7565b60405180910390fd5b565b6000611d927f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124da565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611dc3611ce6565b50565b611df27f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b6124e4565b60000160009054906101000a900460ff1615611e1657611e11836124ee565b611f2f565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e7e57506040513d601f19601f82011682018060405250810190611e7b9190613b33565b60015b611ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb490613bd2565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611f22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1990613c64565b60405180910390fd5b50611f2e8383836125a7565b5b505050565b60c960006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611f62816125d3565b50565b600033905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd690613cf6565b60405180910390fd5b565b600060019054906101000a900460ff16612030576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202790613cf6565b60405180910390fd5b61204061203b611f65565b611f34565b565b600060019054906101000a900460ff16612091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208890613cf6565b60405180910390fd5b600061209b61081a565b905060006120a7612699565b90508c8260070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b826003016000806003811115612106576121056129c1565b5b6003811115612118576121176129c1565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a8260030160006001600381111561217f5761217e6129c1565b5b6003811115612191576121906129c1565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555089826003016000600260038111156121f8576121f76129c1565b5b600381111561220a576122096129c1565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550888260030160006003808111156122705761226f6129c1565b5b6003811115612282576122816129c1565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550878160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550612302876126d5565b8160010160106101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508581600001600c6101000a81548163ffffffff021916908363ffffffff160217905550848160010160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550838160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550828160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050505050505050505050565b6123e88161274f565b61241e576040517f8f9195fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061242761081a565b600301600084600381111561243f5761243e6129c1565b5b6003811115612451576124506129c1565b5b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffdf54bf052398eb41c923eb1bd596351c5e72b99959d1ca529a7f13c0a2503d782826040516124ce929190613d5e565b60405180910390a15050565b6000819050919050565b6000819050919050565b6124f781611f6d565b612536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161252d90613df9565b60405180910390fd5b806125637f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6124da565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6125b0836127a0565b6000825111806125bd5750805b156125ce576125cc83836127ef565b505b505050565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060017f0f1d85405047bdb6b0a60e27531f52a1f7a948613527b9b83a7552558207aa1660001c6126cc919061370f565b90508091505090565b600062989680680100000000000000006126ef9190613e19565b821115612731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161272890613ea7565b60405180910390fd5b6298968061273e8361281c565b6127489190613ef6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361278d576000905061279b565b6000823b9050600081119150505b919050565b6127a9816124ee565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060612814838360405180606001604052806027815260200161411f60279139612876565b905092915050565b600080629896808361282e9190613f27565b1461286e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161286590613fa4565b60405180910390fd5b819050919050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516128a09190614035565b600060405180830381855af49150503d80600081146128db576040519150601f19603f3d011682016040523d82523d6000602084013e6128e0565b606091505b50915091506128f1868383876128fc565b925050509392505050565b6060831561295e5760008351036129565761291685611f6d565b612955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161294c90614098565b60405180910390fd5b5b829050612969565b6129688383612971565b5b949350505050565b6000825111156129845781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129b891906140fc565b60405180910390fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112612a2957612a28612a04565b5b8235905067ffffffffffffffff811115612a4657612a45612a09565b5b602083019150836001820283011115612a6257612a61612a0e565b5b9250929050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612ab282612a69565b810181811067ffffffffffffffff82111715612ad157612ad0612a7a565b5b80604052505050565b6000612ae46129f0565b9050612af08282612aa9565b919050565b600067ffffffffffffffff821115612b1057612b0f612a7a565b5b602082029050602081019050919050565b600067ffffffffffffffff82169050919050565b612b3e81612b21565b8114612b4957600080fd5b50565b600081359050612b5b81612b35565b92915050565b6000612b74612b6f84612af5565b612ada565b90508083825260208201905060208402830185811115612b9757612b96612a0e565b5b835b81811015612bc05780612bac8882612b4c565b845260208401935050602081019050612b99565b5050509392505050565b600082601f830112612bdf57612bde612a04565b5b8135612bef848260208601612b61565b91505092915050565b6000819050919050565b612c0b81612bf8565b8114612c1657600080fd5b50565b600081359050612c2881612c02565b92915050565b600080fd5b600063ffffffff82169050919050565b612c4c81612c33565b8114612c5757600080fd5b50565b600081359050612c6981612c43565b92915050565b60008115159050919050565b612c8481612c6f565b8114612c8f57600080fd5b50565b600081359050612ca181612c7b565b92915050565b600060a08284031215612cbd57612cbc612c2e565b5b612cc760a0612ada565b90506000612cd784828501612c5a565b6000830152506020612ceb84828501612b4c565b6020830152506040612cff84828501612b4c565b6040830152506060612d1384828501612c92565b6060830152506080612d2784828501612c19565b60808301525092915050565b6000806000806000806000610120888a031215612d5357612d526129fa565b5b600088013567ffffffffffffffff811115612d7157612d706129ff565b5b612d7d8a828b01612a13565b9750975050602088013567ffffffffffffffff811115612da057612d9f6129ff565b5b612dac8a828b01612bca565b955050604088013567ffffffffffffffff811115612dcd57612dcc6129ff565b5b612dd98a828b01612a13565b94509450506060612dec8a828b01612c19565b9250506080612dfd8a828b01612ca7565b91505092959891949750929550565b60008083601f840112612e2257612e21612a04565b5b8235905067ffffffffffffffff811115612e3f57612e3e612a09565b5b602083019150836020820283011115612e5b57612e5a612a0e565b5b9250929050565b600080600080600060e08688031215612e7e57612e7d6129fa565b5b600086013567ffffffffffffffff811115612e9c57612e9b6129ff565b5b612ea888828901612a13565b9550955050602086013567ffffffffffffffff811115612ecb57612eca6129ff565b5b612ed788828901612e0c565b93509350506040612eea88828901612ca7565b9150509295509295909350565b60008060408385031215612f0e57612f0d6129fa565b5b6000612f1c85828601612b4c565b9250506020612f2d85828601612c19565b9150509250929050565b600060208284031215612f4d57612f4c6129fa565b5b6000612f5b84828501612c19565b91505092915050565b600060208284031215612f7a57612f796129fa565b5b6000612f8884828501612b4c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612fbc82612f91565b9050919050565b612fcc81612fb1565b8114612fd757600080fd5b50565b600081359050612fe981612fc3565b92915050565b600060208284031215613005576130046129fa565b5b600061301384828501612fda565b91505092915050565b600080600060608486031215613035576130346129fa565b5b600061304386828701612fda565b935050602061305486828701612c92565b925050604061306586828701612c92565b9150509250925092565b600080fd5b600067ffffffffffffffff82111561308f5761308e612a7a565b5b61309882612a69565b9050602081019050919050565b82818337600083830152505050565b60006130c76130c284613074565b612ada565b9050828152602081018484840111156130e3576130e261306f565b5b6130ee8482856130a5565b509392505050565b600082601f83011261310b5761310a612a04565b5b813561311b8482602086016130b4565b91505092915050565b6000806040838503121561313b5761313a6129fa565b5b600061314985828601612fda565b925050602083013567ffffffffffffffff81111561316a576131696129ff565b5b613176858286016130f6565b9150509250929050565b6000819050919050565b61319381613180565b82525050565b60006020820190506131ae600083018461318a565b92915050565b60008060008060e085870312156131ce576131cd6129fa565b5b600085013567ffffffffffffffff8111156131ec576131eb6129ff565b5b6131f887828801612e0c565b9450945050602061320b87828801612c19565b925050604061321c87828801612ca7565b91505092959194509250565b61323181612c6f565b82525050565b600060408201905061324c6000830185613228565b6132596020830184613228565b9392505050565b61326981612fb1565b82525050565b60006020820190506132846000830184613260565b92915050565b600080600080600061010086880312156132a7576132a66129fa565b5b60006132b588828901612fda565b955050602086013567ffffffffffffffff8111156132d6576132d56129ff565b5b6132e288828901612e0c565b945094505060406132f588828901612c19565b925050606061330688828901612ca7565b9150509295509295909350565b60008060008060e0858703121561332d5761332c6129fa565b5b600061333b87828801612fda565b945050602085013567ffffffffffffffff81111561335c5761335b6129ff565b5b61336887828801612e0c565b9350935050604061337b87828801612ca7565b91505092959194509250565b600061339282612fb1565b9050919050565b6133a281613387565b81146133ad57600080fd5b50565b6000813590506133bf81613399565b92915050565b60006133d082612fb1565b9050919050565b6133e0816133c5565b81146133eb57600080fd5b50565b6000813590506133fd816133d7565b92915050565b600061340e82612fb1565b9050919050565b61341e81613403565b811461342957600080fd5b50565b60008135905061343b81613415565b92915050565b600061344c82612fb1565b9050919050565b61345c81613441565b811461346757600080fd5b50565b60008135905061347981613453565b92915050565b600061348a82612fb1565b9050919050565b61349a8161347f565b81146134a557600080fd5b50565b6000813590506134b781613491565b92915050565b60008060008060008060008060008060006101608c8e0312156134e3576134e26129fa565b5b60006134f18e828f016133b0565b9b505060206135028e828f016133ee565b9a505060406135138e828f0161342c565b99505060606135248e828f0161346a565b98505060806135358e828f016134a8565b97505060a06135468e828f01612b4c565b96505060c06135578e828f01612c19565b95505060e06135688e828f01612c5a565b94505061010061357a8e828f01612b4c565b93505061012061358c8e828f01612b4c565b92505061014061359e8e828f01612b4c565b9150509295989b509295989b9093969950565b600080604083850312156135c8576135c76129fa565b5b60006135d685828601612b4c565b92505060206135e785828601612fda565b9150509250929050565b600481106135fe57600080fd5b50565b600081359050613610816135f1565b92915050565b6000806040838503121561362d5761362c6129fa565b5b600061363b85828601613601565b925050602061364c85828601612fda565b9150509250929050565b60008060006040848603121561366f5761366e6129fa565b5b600084013567ffffffffffffffff81111561368d5761368c6129ff565b5b61369986828701612a13565b935093505060206136ac86828701612c19565b9150509250925092565b6136bf81612b21565b82525050565b60006020820190506136da60008301846136b6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061371a82612bf8565b915061372583612bf8565b925082820390508181111561373d5761373c6136e0565b5b92915050565b600082825260208201905092915050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006137b0602c83613743565b91506137bb82613754565b604082019050919050565b600060208201905081810360008301526137df816137a3565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000613842602c83613743565b915061384d826137e6565b604082019050919050565b6000602082019050818103600083015261387181613835565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b60006138d4603883613743565b91506138df82613878565b604082019050919050565b60006020820190508181036000830152613903816138c7565b9050919050565b7f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060008201527f6e6577206f776e65720000000000000000000000000000000000000000000000602082015250565b6000613966602983613743565b91506139718261390a565b604082019050919050565b6000602082019050818103600083015261399581613959565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006139f8602e83613743565b9150613a038261399c565b604082019050919050565b60006020820190508181036000830152613a27816139eb565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000613a6a613a65613a6084613a2e565b613a45565b613a38565b9050919050565b613a7a81613a4f565b82525050565b6000602082019050613a956000830184613a71565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613ad1602083613743565b9150613adc82613a9b565b602082019050919050565b60006020820190508181036000830152613b0081613ac4565b9050919050565b613b1081613180565b8114613b1b57600080fd5b50565b600081519050613b2d81613b07565b92915050565b600060208284031215613b4957613b486129fa565b5b6000613b5784828501613b1e565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000613bbc602e83613743565b9150613bc782613b60565b604082019050919050565b60006020820190508181036000830152613beb81613baf565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b6000613c4e602983613743565b9150613c5982613bf2565b604082019050919050565b60006020820190508181036000830152613c7d81613c41565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000613ce0602b83613743565b9150613ceb82613c84565b604082019050919050565b60006020820190508181036000830152613d0f81613cd3565b9050919050565b60048110613d2757613d266129c1565b5b50565b6000819050613d3882613d16565b919050565b6000613d4882613d2a565b9050919050565b613d5881613d3d565b82525050565b6000604082019050613d736000830185613d4f565b613d806020830184613260565b9392505050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000613de3602d83613743565b9150613dee82613d87565b604082019050919050565b60006020820190508181036000830152613e1281613dd6565b9050919050565b6000613e2482612bf8565b9150613e2f83612bf8565b9250828202613e3d81612bf8565b91508282048414831517613e5457613e536136e0565b5b5092915050565b7f4d61782076616c75652065786365656465640000000000000000000000000000600082015250565b6000613e91601283613743565b9150613e9c82613e5b565b602082019050919050565b60006020820190508181036000830152613ec081613e84565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613f0182612bf8565b9150613f0c83612bf8565b925082613f1c57613f1b613ec7565b5b828204905092915050565b6000613f3282612bf8565b9150613f3d83612bf8565b925082613f4d57613f4c613ec7565b5b828206905092915050565b7f4d617820707265636973696f6e20657863656564656400000000000000000000600082015250565b6000613f8e601683613743565b9150613f9982613f58565b602082019050919050565b60006020820190508181036000830152613fbd81613f81565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015613ff8578082015181840152602081019050613fdd565b60008484015250505050565b600061400f82613fc4565b6140198185613fcf565b9350614029818560208601613fda565b80840191505092915050565b60006140418284614004565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000614082601d83613743565b915061408d8261404c565b602082019050919050565b600060208201905081810360008301526140b181614075565b9050919050565b600081519050919050565b60006140ce826140b8565b6140d88185613743565b93506140e8818560208601613fda565b6140f181612a69565b840191505092915050565b6000602082019050818103600083015261411681846140c3565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220392ad8803f6ff53f0834e96574362d4cf5f7f9b25aac70bacaa7f215809ebe1d64736f6c63430008120033"
