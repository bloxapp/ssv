---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ssv-exporter
  namespace: REPLACE_NAMESPACE
spec:
  hosts:
  - "ws-exporter.REPLACE_DOMAIN_SUFFIX"
  gateways:
  - ssv-exporter
  http:
  - route:
    - destination:
        host: ssv-exporter
        port:
          number: 14000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ssv-exporter
  namespace: REPLACE_NAMESPACE
spec:
  selector:
    istio: ingressgateway-int
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "ws-exporter.REPLACE_DOMAIN_SUFFIX"
---
apiVersion: v1
kind: Service
metadata:
  name: ssv-exporter
  namespace: REPLACE_NAMESPACE
  labels:
    app: ssv-exporter
spec:
  type: ClusterIP
  ports:
    - port: 12000
      protocol: UDP
      targetPort: 12000
      name: port-12000
    - port: 13000
      protocol: TCP
      targetPort: 13000
      name: port-13000
    - port: 14000
      protocol: TCP
      targetPort: 14000
      name: port-14000
    - port: 15000
      protocol: TCP
      targetPort: 15000
      name: port-15000
  selector:
    app: ssv-exporter
---
apiVersion: REPLACE_API_VERSION
kind: Deployment
metadata:
  labels:
    app: ssv-exporter
  name: ssv-exporter
  namespace: REPLACE_NAMESPACE
spec:
  replicas: REPLACE_REPLICAS
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ssv-exporter
  template:
    metadata:
      labels:
        app: ssv-exporter
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - ssv-main
      containers:
      - name: ssv-exporter
        image: REPLACE_DOCKER_REPO:REPLACE_IMAGETAG
        imagePullPolicy: Always
        resources:
          limits:
            cpu: REPLACE_EXPORTER_CPU_LIMIT
            memory: REPLACE_EXPORTER_MEM_LIMIT
        command: ["make", "start-node"]
        ports:
        - containerPort: 12000
          name: port-12000
          hostPort: 12000
          protocol: UDP
        - containerPort: 13000
          name: port-13000
          hostPort: 13000
        - containerPort: 14000
          name: port-14000
          hostPort: 14000
        - containerPort: 15000
          name: port-15000
          hostPort: 15000
        env:
          - name: SHARE_CONFIG
            value: "./data/share.yaml"
          - name: ETH_1_ADDR
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: eth1_addr
          - name: CONFIG_PATH
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: config_path
          - name: ENR_KEY
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: enr_key
          - name: REGISTRY_CONTRACT_ADDR_KEY
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: smart_contract_addr_key
          - name: ABI_VERSION
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: abi_version
                optional: true
          - name: LOG_LEVEL
            value: "debug"
          - name: DISCOVERY_TYPE_KEY
            value: "discv5"
          - name: NETWORK
            value: "prater"
          - name: DB_PATH
            value: "./data/db"
          - name: DB_REPORTING
            value: "true"
          - name: METRICS_API_PORT
            value: "15000"
          - name: ENABLE_PROFILE
            value: "true"
          - name: GENERATE_OPERATOR_KEY
            value: "true"
          - name: UDP_PORT
            value: "12000"
          - name: TCP_PORT
            value: "13000"
          - name: WS_API_PORT
            value: "14000"
          - name: BOOTNODES
            value: "enr:-LK4QDAmZK-69qRU5q-cxW6BqLwIlWoYH-BoRlX2N7D9rXBlM7OJ9tWRRtryqvCW04geHC_ab8QmWT9QULnT0Tc5S1cBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1pf1CAAAAAP__________gmlkgnY0gmlwhArqAsGJc2VjcDI1NmsxoQO8KQz5L1UEXzEr-CXFFq1th0eG6gopbdul2OQVMuxfMoN0Y3CCE4iDdWRwgg-g"
          - name: FULLNODE
            value: "true"
          - name: NETWORK_ID
            value: "ssv-testnet-stage"
          - name: FORKV2_EPOCH
            value: '1'
          - name: SUBNETS
            value: "0xffffffffffffffffffffffffffffffff"
        volumeMounts:
        - mountPath: /data
          name: ssv-exporter
        - mountPath: /data/share.yaml
          subPath: share.yaml
          name: ssv-exporter-cm
      volumes:
      - name: ssv-exporter
        persistentVolumeClaim:
          claimName: ssv-exporter
      - name: ssv-exporter-cm
        configMap:
          name: ssv-exporter-cm
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/role
          operator: Exists
      hostNetwork: true
